module AcmeAISDK
  module Models
    type file_fileslist_params =
      {
        limit: Integer,
        offset: Integer,
        sort_by: AcmeAISDK::Models::FileFileslistParams::sort_by,
        sort_order: AcmeAISDK::Models::FileFileslistParams::sort_order,
        status: AcmeAISDK::Models::FileFileslistParams::status
      }
      & AcmeAISDK::Internal::Type::request_parameters

    class FileFileslistParams < AcmeAISDK::Internal::Type::BaseModel
      extend AcmeAISDK::Internal::Type::RequestParameters::Converter
      include AcmeAISDK::Internal::Type::RequestParameters

      attr_reader limit: Integer?

      def limit=: (Integer) -> Integer

      attr_reader offset: Integer?

      def offset=: (Integer) -> Integer

      attr_reader sort_by: AcmeAISDK::Models::FileFileslistParams::sort_by?

      def sort_by=: (
        AcmeAISDK::Models::FileFileslistParams::sort_by
      ) -> AcmeAISDK::Models::FileFileslistParams::sort_by

      attr_reader sort_order: AcmeAISDK::Models::FileFileslistParams::sort_order?

      def sort_order=: (
        AcmeAISDK::Models::FileFileslistParams::sort_order
      ) -> AcmeAISDK::Models::FileFileslistParams::sort_order

      attr_reader status: AcmeAISDK::Models::FileFileslistParams::status?

      def status=: (
        AcmeAISDK::Models::FileFileslistParams::status
      ) -> AcmeAISDK::Models::FileFileslistParams::status

      def initialize: (
        ?limit: Integer,
        ?offset: Integer,
        ?sort_by: AcmeAISDK::Models::FileFileslistParams::sort_by,
        ?sort_order: AcmeAISDK::Models::FileFileslistParams::sort_order,
        ?status: AcmeAISDK::Models::FileFileslistParams::status,
        ?request_options: AcmeAISDK::request_opts
      ) -> void

      type sort_by = :upload_time | :status

      module SortBy
        extend AcmeAISDK::Internal::Type::Enum

        UPLOAD_TIME: :upload_time
        STATUS: :status

        def self?.values: -> ::Array[AcmeAISDK::Models::FileFileslistParams::sort_by]
      end

      type sort_order = :asc | :desc

      module SortOrder
        extend AcmeAISDK::Internal::Type::Enum

        ASC: :asc
        DESC: :desc

        def self?.values: -> ::Array[AcmeAISDK::Models::FileFileslistParams::sort_order]
      end

      type status = :pending | :processing | :completed | :failed

      module Status
        extend AcmeAISDK::Internal::Type::Enum

        PENDING: :pending
        PROCESSING: :processing
        COMPLETED: :completed
        FAILED: :failed

        def self?.values: -> ::Array[AcmeAISDK::Models::FileFileslistParams::status]
      end
    end
  end
end
