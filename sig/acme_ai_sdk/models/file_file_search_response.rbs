module AcmeAISDK
  module Models
    type file_file_search_response =
      {
        file_id: String,
        metadata: AcmeAISDK::Models::FileFileSearchResponse::Metadata,
        query: String,
        results: ::Array[AcmeAISDK::Models::FileFileSearchResponse::Result],
        total_results: Integer
      }

    class FileFileSearchResponse < AcmeAISDK::BaseModel
      attr_reader file_id: String?

      def file_id=: (String) -> String

      attr_reader metadata: AcmeAISDK::Models::FileFileSearchResponse::Metadata?

      def metadata=: (
        AcmeAISDK::Models::FileFileSearchResponse::Metadata
      ) -> AcmeAISDK::Models::FileFileSearchResponse::Metadata

      attr_reader query: String?

      def query=: (String) -> String

      attr_reader results: ::Array[AcmeAISDK::Models::FileFileSearchResponse::Result]?

      def results=: (
        ::Array[AcmeAISDK::Models::FileFileSearchResponse::Result]
      ) -> ::Array[AcmeAISDK::Models::FileFileSearchResponse::Result]

      attr_reader total_results: Integer?

      def total_results=: (Integer) -> Integer

      def initialize: (
        ?file_id: String,
        ?metadata: AcmeAISDK::Models::FileFileSearchResponse::Metadata,
        ?query: String,
        ?results: ::Array[AcmeAISDK::Models::FileFileSearchResponse::Result],
        ?total_results: Integer
      ) -> void

      def to_hash: -> AcmeAISDK::Models::file_file_search_response

      type metadata =
        {
          description: String,
          file_id: String,
          file_type: String,
          filename: String,
          page_count: Integer,
          processing_options: AcmeAISDK::Models::FileFileSearchResponse::Metadata::ProcessingOptions,
          upload_time: Time,
          word_count: Integer
        }

      class Metadata < AcmeAISDK::BaseModel
        attr_reader description: String?

        def description=: (String) -> String

        attr_reader file_id: String?

        def file_id=: (String) -> String

        attr_reader file_type: String?

        def file_type=: (String) -> String

        attr_reader filename: String?

        def filename=: (String) -> String

        attr_reader page_count: Integer?

        def page_count=: (Integer) -> Integer

        attr_reader processing_options: AcmeAISDK::Models::FileFileSearchResponse::Metadata::ProcessingOptions?

        def processing_options=: (
          AcmeAISDK::Models::FileFileSearchResponse::Metadata::ProcessingOptions
        ) -> AcmeAISDK::Models::FileFileSearchResponse::Metadata::ProcessingOptions

        attr_reader upload_time: Time?

        def upload_time=: (Time) -> Time

        attr_reader word_count: Integer?

        def word_count=: (Integer) -> Integer

        def initialize: (
          ?description: String,
          ?file_id: String,
          ?file_type: String,
          ?filename: String,
          ?page_count: Integer,
          ?processing_options: AcmeAISDK::Models::FileFileSearchResponse::Metadata::ProcessingOptions,
          ?upload_time: Time,
          ?word_count: Integer
        ) -> void

        def to_hash: -> AcmeAISDK::Models::FileFileSearchResponse::metadata

        type processing_options = { language: String, ocr: bool }

        class ProcessingOptions < AcmeAISDK::BaseModel
          attr_reader language: String?

          def language=: (String) -> String

          attr_reader ocr: bool?

          def ocr=: (bool) -> bool

          def initialize: (?language: String, ?ocr: bool) -> void

          def to_hash: -> AcmeAISDK::Models::FileFileSearchResponse::Metadata::processing_options
        end
      end

      type result =
        {
          additional_context: top,
          highlight_ranges: ::Array[AcmeAISDK::Models::FileFileSearchResponse::Result::HighlightRange],
          page_number: Integer,
          passage: String,
          relevance_score: Float
        }

      class Result < AcmeAISDK::BaseModel
        attr_reader additional_context: top?

        def additional_context=: (top) -> top

        attr_reader highlight_ranges: ::Array[AcmeAISDK::Models::FileFileSearchResponse::Result::HighlightRange]?

        def highlight_ranges=: (
          ::Array[AcmeAISDK::Models::FileFileSearchResponse::Result::HighlightRange]
        ) -> ::Array[AcmeAISDK::Models::FileFileSearchResponse::Result::HighlightRange]

        attr_reader page_number: Integer?

        def page_number=: (Integer) -> Integer

        attr_reader passage: String?

        def passage=: (String) -> String

        attr_reader relevance_score: Float?

        def relevance_score=: (Float) -> Float

        def initialize: (
          ?additional_context: top,
          ?highlight_ranges: ::Array[AcmeAISDK::Models::FileFileSearchResponse::Result::HighlightRange],
          ?page_number: Integer,
          ?passage: String,
          ?relevance_score: Float
        ) -> void

        def to_hash: -> AcmeAISDK::Models::FileFileSearchResponse::result

        type highlight_range = { end_: Integer, start: Integer }

        class HighlightRange < AcmeAISDK::BaseModel
          attr_reader end_: Integer?

          def end_=: (Integer) -> Integer

          attr_reader start: Integer?

          def start=: (Integer) -> Integer

          def initialize: (?end_: Integer, ?start: Integer) -> void

          def to_hash: -> AcmeAISDK::Models::FileFileSearchResponse::Result::highlight_range
        end
      end
    end
  end
end
